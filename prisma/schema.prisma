// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_POSTGRES_PRISMA_URL")
  directUrl = env("DATABASE_DATABASE_URL_UNPOOLED")
}

model User {
  id             String          @id @default(cuid())
  name           String          @unique
  setupComplete  Boolean         @default(false)
  workouts       Workout[]
  stats          Stats?
  rehabExercises RehabExercise[]
}

model Workout {
  id         String     @id @default(cuid())
  userId     String
  date       DateTime
  completed  Boolean    @default(false)
  exercises  Exercise[]
  user       User       @relation(fields: [userId], references: [id])

  @@index([userId, date])
}

model Exercise {
  id         String   @id @default(cuid())
  workoutId  String
  name       String
  orderIndex Int
  sets       Set[]
  workout    Workout  @relation(fields: [workoutId], references: [id], onDelete: Cascade)

  @@index([workoutId])
}

model Set {
  id         String   @id @default(cuid())
  exerciseId String
  reps       Int
  weight     Float
  completed  Boolean  @default(false)
  orderIndex Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)

  @@index([exerciseId])
}

model Stats {
  id                String   @id @default(cuid())
  userId            String   @unique
  totalSetsCompleted Int     @default(0)
  totalExercises    Int     @default(0)
  lastWorkoutDate   DateTime?
  user              User     @relation(fields: [userId], references: [id])
}

model RehabExercise {
  id            String    @id @default(cuid())
  userId        String
  name          String
  description   String?
  category      String?   // e.g., "Warm-up", "Mobility & Stretching", "Band / Dumbbell / Machine Strength"
  setsLeft      Int?      // Number of sets for left side
  setsRight     Int?      // Number of sets for right side
  sets          Int?      // Number of sets (when not side-specific)
  reps          Int?      // Number of repetitions
  hold          Int?      // Hold time in seconds
  load          String?   // Load/weight (e.g., "2 kg", "7.5 kg")
  bandColor     String?   // Resistance band color
  time          String?   // Time duration (e.g., "3-5 min")
  cues          String?   // Exercise cues and instructions
  completed     Boolean   @default(false)
  completedDate DateTime?
  orderIndex    Int
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model ActivityLog {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())
  category  String   // e.g., "PRICE_UPDATE", "PREDICTION", "API_CALL"
  operation String
  message   String
  status    String   // "SUCCESS", "ERROR", "IN_PROGRESS"
  details   Json?

  @@index([timestamp])
  @@index([category])
  @@index([status])
}
